import 'dart:async';
import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:latlong2/latlong.dart';

void main() {
  runApp(MaterialApp(
    home: MyApp(),
  ));
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  List<List<LatLng>> routes = [
    // ... Your route data ...
  ];

  List<LatLng> routePoints = [];
  int currentRouteIndex = 0;

  @override
  void initState() {
    super.initState();
    loadRouteData();
  }

  Future<void> loadRouteData() async {
    setState(() {
      routePoints = routes[currentRouteIndex];
    });

    // Set up a timer to switch routes every 3 seconds
    Timer.periodic(Duration(seconds: 3), (timer) {
      setState(() {
        currentRouteIndex = (currentRouteIndex + 1) % routes.length;
        routePoints = routes[currentRouteIndex];
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: FlutterMap(
          options: MapOptions(
            center: LatLng(41.025, 28.9926), // HaritanÄ±n merkezi
            zoom: 12,
          ),
          layers: [
            TileLayerOptions(
              urlTemplate: "https://tile.openstreetmap.org/{z}/{x}/{y}.png",
              subdomains: ['a', 'b', 'c'],
            ),
            PolylineLayerOptions(
              polylines: [
                Polyline(
                  points: routePoints,
                  color: Colors.red,
                  strokeWidth: 3.0,
                ),
              ],
            ),
            MarkerLayerOptions(
              markers: [
                // Start Point Marker
                Marker(
                  width: 80.0,
                  height: 80.0,
                  point: routePoints.isNotEmpty ? routePoints.first : LatLng(0, 0),
                  builder: (ctx) => Icon(
                    Icons.circle,
                    color: Colors.blue, // You can choose your desired color for the start point marker
                  ),
                ),
                // End Point Marker
                Marker(
                  width: 80.0,
                  height: 80.0,
                  point: routePoints.isNotEmpty ? routePoints.last : LatLng(0, 0),
                  builder: (ctx) => Icon(
                    Icons.circle,
                    color: Colors.green, // You can choose your desired color for the end point marker
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}
